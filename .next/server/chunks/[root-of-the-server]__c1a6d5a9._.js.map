{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/lib/supabaseServer.ts"],"sourcesContent":["// lib/supabaseServer.ts\nimport { cookies } from 'next/headers';\nimport { createServerClient } from '@supabase/ssr';\n\n/** Server-side Supabase client (Next 15: cookies() is async) */\nexport async function supabaseServer() {\n  const cookieStore = await cookies();\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: { [key: string]: unknown }) {\n          try {\n            cookieStore.set(name, value, options);\n          } catch {\n            // The `set` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n        remove(name: string, options: { [key: string]: unknown }) {\n          try {\n            cookieStore.set(name, '', { ...options, maxAge: 0 });\n          } catch {\n            // The `remove` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  );\n}"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB;AACA;AAAA;;;AAGO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,gQAAA,CAAA,UAAO,AAAD;IAChC,OAAO,CAAA,GAAA,wRAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAmC;gBAClE,IAAI;oBACF,YAAY,GAAG,CAAC,MAAM,OAAO;gBAC/B,EAAE,OAAM;gBACN,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;YACA,QAAO,IAAY,EAAE,OAAmC;gBACtD,IAAI;oBACF,YAAY,GAAG,CAAC,MAAM,IAAI;wBAAE,GAAG,OAAO;wBAAE,QAAQ;oBAAE;gBACpD,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/api/lookup-options/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { supabaseServer } from '@/lib/supabaseServer';\n\n// Helper function to simplify moisture options for better UX\nfunction getSimplifiedMoistureOptions(_moistureData: unknown[]) {\n  // Simplify from 6 options to 3 most useful ones\n  const simplifiedOptions = [\n    { code: 1, display: \"Dry\" }, // Will match dry, dry or moist, dry or moist or wet via compound search\n    { code: 4, display: \"Moist\" }, // Will match moist, moist or wet via compound search  \n    { code: 6, display: \"Wet\" }, // Will match wet conditions\n  ];\n  \n  return simplifiedOptions;\n}\n\n// Helper function to simplify sun options for better UX\nfunction getSimplifiedSunOptions(_sunData: unknown[]) {\n  // Simplify from 6 options to 3 most useful ones\n  const simplifiedOptions = [\n    { code: 1, display: \"Full Sun\" }, // Will match full sun, full or part sun, any via compound search\n    { code: 4, display: \"Part Sun\" }, // Will match part sun, part sun or shade via compound search\n    { code: 6, display: \"Shade\" }, // Will match shade conditions\n  ];\n  \n  return simplifiedOptions;\n}\n\n// Helper function to simplify soil options for better UX\nfunction getSimplifiedSoilOptions(_soilData: unknown[]) {\n  // Simplify from 7 options to 3 main soil types\n  const simplifiedOptions = [\n    { code: 2, display: \"Clay\" }, // Will match clay, clay or loam, clay or loam or sandy via compound search\n    { code: 3, display: \"Loam\" }, // Will match loam, clay or loam, loam or sandy via compound search\n    { code: 4, display: \"Sandy\" }, // Will match sandy, loam or sandy via compound search\n  ];\n  \n  return simplifiedOptions;\n}\n\n// Helper function to simplify wildlife options for better UX\nfunction getSimplifiedWildlifeOptions(_wildlifeData: unknown[]) {\n  // Define simplified categories with the codes that should map to them\n  const simplifiedOptions = [\n    { code: 1, display: \"Birds\" }, // Maps to \"Attracts birds.\"\n    { code: 2, display: \"Hummingbirds\" }, // Maps to \"Attracts hummingbirds.\"\n    { code: 3, display: \"Bees\" }, // Maps to \"Feeds the bees.\"\n    { code: 4, display: \"Butterflies & Moths\" }, // Maps to \"Feeds adult butterflies or moths.\"\n    { code: 5, display: \"Butterfly/Moth Larvae\" }, // Maps to \"Larval host plant.\"\n    { code: 25, display: \"Multiple Wildlife\" }, // Maps to complex combo \"Birds. Hummingbirds. Bees. Adult butterflies or moths.\"\n  ];\n  \n  return simplifiedOptions;\n}\n\nexport async function GET() {\n  try {\n    const supabase = await supabaseServer();\n\n    // Fetch all lookup tables in parallel\n    const [\n      categoriesRes,\n      heightRes,\n      bloomRes,\n      moistureRes,\n      sunRes,\n      wildlifeRes,\n      soilRes,\n      deerRes,\n    ] = await Promise.all([\n      supabase.from('categories').select('cat_code, cat_display').order('cat_display'),\n      supabase.from('height').select('height_code, height_display').order('height_code'),\n      supabase.from('bloom').select('bloom_code, bloom_display').order('bloom_display'),\n      supabase.from('moisture').select('moist_code, moist_display').order('moist_display'),\n      supabase.from('sun').select('sun_code, sun_display').order('sun_display'),\n      supabase.from('wildlife').select('wild_code, wildlife_display').order('wildlife_display'),\n      supabase.from('soil').select('soil_code, soil_display').order('soil_display'),\n      supabase.from('deer').select('deer_code, deer_display').order('deer_display'),\n    ]);\n\n    // Check for errors\n    const errors = [\n      categoriesRes.error,\n      heightRes.error,\n      bloomRes.error,\n      moistureRes.error,\n      sunRes.error,\n      wildlifeRes.error,\n      soilRes.error,\n      deerRes.error,\n    ].filter(Boolean);\n\n    if (errors.length > 0) {\n      console.error('Lookup options fetch errors:', errors);\n      return NextResponse.json({ error: 'Failed to fetch lookup options' }, { status: 500 });\n    }\n\n    return NextResponse.json({\n      categories: (categoriesRes.data || []).map(item => ({ code: item.cat_code, display: item.cat_display })),\n      height: (heightRes.data || []).map(item => ({ code: item.height_code, display: item.height_display })),\n      bloom: (bloomRes.data || []).map(item => ({ code: item.bloom_code, display: item.bloom_display })),\n      moisture: getSimplifiedMoistureOptions(moistureRes.data || []),\n      sun: getSimplifiedSunOptions(sunRes.data || []),\n      wildlife: getSimplifiedWildlifeOptions(wildlifeRes.data || []),\n      soil: getSimplifiedSoilOptions(soilRes.data || []),\n      deer: (deerRes.data || []).map(item => ({ code: item.deer_code, display: item.deer_display })),\n    });\n\n  } catch (error) {\n    console.error('Lookup options API error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}