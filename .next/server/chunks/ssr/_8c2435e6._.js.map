{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/ui/modal.tsx"],"sourcesContent":["// components/ui/modal.tsx\n'use client';\n\nimport { useEffect } from 'react';\n\nexport type ModalProps = {\n  open: boolean;\n  onClose: () => void;\n  title?: string;\n  /** Tailwind max-width utility, e.g. \"max-w-xl\" | \"max-w-2xl\" | \"max-w-3xl\" */\n  maxWidth?: string;\n  children: React.ReactNode;\n};\n\nexport function Modal({\n  open,\n  onClose,\n  title,\n  maxWidth = 'max-w-2xl', // smaller default so it fits most screens\n  children,\n}: ModalProps) {\n  // Close on ESC\n  useEffect(() => {\n    if (!open) return;\n    const onKey = (e: KeyboardEvent) => e.key === 'Escape' && onClose();\n    window.addEventListener('keydown', onKey);\n    return () => window.removeEventListener('keydown', onKey);\n  }, [open, onClose]);\n\n  // Prevent background scroll while open\n  useEffect(() => {\n    if (!open) return;\n    const { body } = document;\n    const prev = body.style.overflow;\n    body.style.overflow = 'hidden';\n    return () => {\n      body.style.overflow = prev;\n    };\n  }, [open]);\n\n  if (!open) return null;\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className=\"fixed inset-0 z-[1000] flex items-center justify-center p-4\"\n    >\n      {/* Backdrop */}\n      <button\n        aria-label=\"Close\"\n        onClick={onClose}\n        className=\"absolute inset-0 bg-black/40\"\n      />\n\n      {/* Panel */}\n      <div\n        className={`relative z-[1001] w-full ${maxWidth} rounded-2xl bg-white shadow-2xl`}\n        style={{ maxHeight: '92vh' }} // hard cap so it always fits\n      >\n        {/* Sticky header with close */}\n        <div className=\"sticky top-0 z-[1] flex items-center justify-between border-b bg-white/95 px-4 py-3 backdrop-blur\">\n          <h2 className=\"text-lg font-semibold truncate\">{title}</h2>\n          <button\n            onClick={onClose}\n            className=\"rounded p-1 text-gray-600 hover:bg-gray-100\"\n            aria-label=\"Close modal\"\n          >\n            ✕\n          </button>\n        </div>\n\n        {/* Scrollable content */}\n        <div className=\"px-4 py-4 overflow-auto\" style={{ maxHeight: 'calc(92vh - 56px)' }}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAG1B;AAFA;;;AAaO,SAAS,MAAM,EACpB,IAAI,EACJ,OAAO,EACP,KAAK,EACL,WAAW,WAAW,EACtB,QAAQ,EACG;IACX,eAAe;IACf,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,MAAM;QACX,MAAM,QAAQ,CAAC,IAAqB,EAAE,GAAG,KAAK,YAAY;QAC1D,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG;QAAC;QAAM;KAAQ;IAElB,uCAAuC;IACvC,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,MAAM;QACX,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ;QAChC,KAAK,KAAK,CAAC,QAAQ,GAAG;QACtB,OAAO;YACL,KAAK,KAAK,CAAC,QAAQ,GAAG;QACxB;IACF,GAAG;QAAC;KAAK;IAET,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,6WAAC;QACC,MAAK;QACL,cAAW;QACX,WAAU;;0BAGV,6WAAC;gBACC,cAAW;gBACX,SAAS;gBACT,WAAU;;;;;;0BAIZ,6WAAC;gBACC,WAAW,CAAC,yBAAyB,EAAE,SAAS,gCAAgC,CAAC;gBACjF,OAAO;oBAAE,WAAW;gBAAO;;kCAG3B,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAG,WAAU;0CAAkC;;;;;;0CAChD,6WAAC;gCACC,SAAS;gCACT,WAAU;gCACV,cAAW;0CACZ;;;;;;;;;;;;kCAMH,6WAAC;wBAAI,WAAU;wBAA0B,OAAO;4BAAE,WAAW;wBAAoB;kCAC9E;;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/flowers.ts"],"sourcesContent":["// app/actions/flowers.ts\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { supabaseServer } from '@/lib/supabaseServer';\nimport type { Flower, UpsertInput } from '@/lib/types';\n\nexport async function listFlowers(): Promise<{ data: Flower[]; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase\n    .from('flowers')\n    .select('id, latin, common, image_name, height_code')\n    .order('id', { ascending: true });\n  return { data: (data as Flower[]) ?? [], error: error?.message ?? null };\n}\n\nexport async function getFlower(id: number): Promise<{ data: Flower | null; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase.from('flowers').select('*').eq('id', id).maybeSingle();\n  return { data: (data as Flower) ?? null, error: error?.message ?? null };\n}\n\nexport async function upsertFlower(input: UpsertInput): Promise<{ data: Flower | null; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase\n    .from('flowers')\n    .upsert(input, { onConflict: 'id' })\n    .select('*')\n    .maybeSingle();\n\n  if (!error) {\n    revalidatePath('/admin');\n    revalidatePath('/');\n  }\n  return { data: (data as Flower) ?? null, error: error?.message ?? null };\n}\n\nexport async function deleteFlower(id: number): Promise<{ error: string | null }> {\n  const supabase = await supabaseServer();\n  const { error } = await supabase.from('flowers').delete().eq('id', id);\n  if (!error) {\n    revalidatePath('/admin');\n    revalidatePath('/');\n  }\n  return { error: error?.message ?? null };\n}"],"names":[],"mappings":";;;;;;IAsBsB,eAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/flowers.ts"],"sourcesContent":["// app/actions/flowers.ts\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { supabaseServer } from '@/lib/supabaseServer';\nimport type { Flower, UpsertInput } from '@/lib/types';\n\nexport async function listFlowers(): Promise<{ data: Flower[]; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase\n    .from('flowers')\n    .select('id, latin, common, image_name, height_code')\n    .order('id', { ascending: true });\n  return { data: (data as Flower[]) ?? [], error: error?.message ?? null };\n}\n\nexport async function getFlower(id: number): Promise<{ data: Flower | null; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase.from('flowers').select('*').eq('id', id).maybeSingle();\n  return { data: (data as Flower) ?? null, error: error?.message ?? null };\n}\n\nexport async function upsertFlower(input: UpsertInput): Promise<{ data: Flower | null; error: string | null }> {\n  const supabase = await supabaseServer();\n  const { data, error } = await supabase\n    .from('flowers')\n    .upsert(input, { onConflict: 'id' })\n    .select('*')\n    .maybeSingle();\n\n  if (!error) {\n    revalidatePath('/admin');\n    revalidatePath('/');\n  }\n  return { data: (data as Flower) ?? null, error: error?.message ?? null };\n}\n\nexport async function deleteFlower(id: number): Promise<{ error: string | null }> {\n  const supabase = await supabaseServer();\n  const { error } = await supabase.from('flowers').delete().eq('id', id);\n  if (!error) {\n    revalidatePath('/admin');\n    revalidatePath('/');\n  }\n  return { error: error?.message ?? null };\n}"],"names":[],"mappings":";;;;;;IAqCsB,eAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/admin/enhanced-editor.tsx"],"sourcesContent":["// components/admin/enhanced-editor.tsx\n'use client';\n\nimport { useMemo, useState, useEffect } from 'react';\nimport { upsertFlower, deleteFlower } from '@/app/actions/flowers';\nimport type { Flower, UpsertInput } from '@/lib/types';\n\ninterface LookupOption {\n  code: number;\n  display: string;\n}\n\ninterface LookupData {\n  categories: LookupOption[];\n  height: LookupOption[];\n  bloom: LookupOption[];\n  moisture: LookupOption[];\n  sun: LookupOption[];\n  wildlife: LookupOption[];\n  soil: LookupOption[];\n  deer: LookupOption[];\n}\n\ntype Props = {\n  initial: Flower | null;\n  onSaved?: (saved: Flower) => void;\n  onDeleted?: (id: number) => void;\n};\n\n/** Enhanced field helpers with better UX */\nfunction Text(props: { label: string; value: string | null; onChange: (v: string) => void; placeholder?: string }) {\n  return (\n    <label className=\"block text-sm\">\n      <span className=\"font-medium text-gray-700\">{props.label}</span>\n      <input\n        className=\"mt-1 w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n        value={props.value ?? ''}\n        placeholder={props.placeholder}\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </label>\n  );\n}\n\nfunction Select(props: { \n  label: string; \n  value: number | null; \n  onChange: (v: number | null) => void; \n  options: LookupOption[];\n  placeholder?: string;\n}) {\n  return (\n    <label className=\"block text-sm\">\n      <span className=\"font-medium text-gray-700\">{props.label}</span>\n      <select\n        className=\"mt-1 w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n        value={props.value ?? ''}\n        onChange={(e) => {\n          const v = e.target.value;\n          props.onChange(v === '' ? null : Number(v));\n        }}\n      >\n        <option value=\"\">{props.placeholder || 'Select...'}</option>\n        {props.options.map((opt) => (\n          <option key={opt.code} value={opt.code}>\n            {opt.display}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n\nfunction TextArea(props: { label: string; value: string | null; onChange: (v: string) => void; placeholder?: string }) {\n  return (\n    <label className=\"block text-sm\">\n      <span className=\"font-medium text-gray-700\">{props.label}</span>\n      <textarea\n        className=\"mt-1 w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n        rows={3}\n        value={props.value ?? ''}\n        placeholder={props.placeholder}\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </label>\n  );\n}\n\nfunction NumericInput(props: { label: string; value: number | null; onChange: (v: number | null) => void; placeholder?: string }) {\n  return (\n    <label className=\"block text-sm\">\n      <span className=\"font-medium text-gray-700\">{props.label}</span>\n      <input\n        type=\"number\"\n        className=\"mt-1 w-full rounded-lg border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-1 focus:ring-blue-500\"\n        value={props.value ?? ''}\n        placeholder={props.placeholder}\n        onChange={(e) => {\n          const v = e.target.value.trim();\n          props.onChange(v === '' ? null : Number(v));\n        }}\n      />\n    </label>\n  );\n}\n\nexport default function EnhancedEditor({ initial, onSaved, onDeleted }: Props) {\n  const [lookupData, setLookupData] = useState<LookupData | null>(null);\n  const [loadingLookups, setLoadingLookups] = useState(true);\n\n  const blank: UpsertInput = useMemo(\n    () => ({\n      id: undefined,\n      common: '',\n      latin: '',\n      image_name: null,\n      height_code: null,\n      bloom_code: null,\n      sun_code: null,\n      moist_code: null,\n      cat_code: null,\n      deer_code: null,\n      wild_code: null,\n      soil_code: null,\n      region: '',\n      design_function: '',\n      gardening_tips: '',\n      wildlife_comments: '',\n      credit_code: null,\n      ph: '',\n    }),\n    [],\n  );\n\n  const [form, setForm] = useState<UpsertInput>(initial ?? blank);\n  const [busy, setBusy] = useState(false);\n  const [msg, setMsg] = useState<string | null>(null);\n\n  // Load lookup data on mount\n  useEffect(() => {\n    const loadLookups = async () => {\n      try {\n        const response = await fetch('/api/lookup-options');\n        if (response.ok) {\n          const data = await response.json();\n          setLookupData(data);\n        } else {\n          console.error('Failed to load lookup options');\n        }\n      } catch (error) {\n        console.error('Error loading lookup options:', error);\n      } finally {\n        setLoadingLookups(false);\n      }\n    };\n\n    loadLookups();\n  }, []);\n\n  function set<K extends keyof UpsertInput>(key: K, val: UpsertInput[K]) {\n    setForm((f) => ({ ...f, [key]: val }));\n    // Clear any previous messages when user starts editing\n    if (msg) setMsg(null);\n  }\n\n  async function onSave() {\n    if (busy) return;\n    \n    // Validate required fields\n    if (!form.common.trim()) {\n      setMsg('Common name is required');\n      return;\n    }\n    if (!form.latin.trim()) {\n      setMsg('Latin name is required');\n      return;\n    }\n\n    setBusy(true);\n    setMsg(null);\n\n    const input: UpsertInput = { \n      ...form, \n      id: form.id && form.id !== 0 ? form.id : initial?.id && initial.id !== 0 ? initial.id : undefined \n    };\n\n    const { data, error } = await upsertFlower(input);\n    setBusy(false);\n\n    if (error || !data) {\n      setMsg(error ?? 'Save failed');\n      return;\n    }\n    setMsg('✅ Successfully saved!');\n    setTimeout(() => {\n      onSaved?.(data);\n    }, 1000); // Show success message briefly before closing\n  }\n\n  async function onDelete() {\n    if (!initial?.id || initial.id === 0 || busy) return;\n    if (!confirm('Are you sure you want to delete this flower? This action cannot be undone.')) return;\n    setBusy(true);\n    setMsg(null);\n    const { error } = await deleteFlower(initial.id);\n    setBusy(false);\n    if (error) {\n      setMsg('❌ Delete failed: ' + error);\n      return;\n    }\n    setMsg('✅ Successfully deleted!');\n    setTimeout(() => {\n      onDeleted?.(initial.id);\n    }, 1000);\n  }\n\n  if (loadingLookups) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"text-gray-500\">Loading form options...</div>\n      </div>\n    );\n  }\n\n  if (!lookupData) {\n    return (\n      <div className=\"p-4 rounded-lg bg-red-50 border border-red-200\">\n        <p className=\"text-red-700\">Failed to load form options. Please refresh and try again.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-[min(95vw,1000px)] max-h-[80vh] overflow-y-auto\">\n      <div className=\"space-y-6\">\n        {/* Basic Information */}\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Basic Information</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Text \n              label=\"Common Name *\" \n              value={form.common} \n              onChange={(v) => set('common', v)}\n              placeholder=\"e.g., Black-eyed Susan\"\n            />\n            <Text \n              label=\"Latin Name *\" \n              value={form.latin} \n              onChange={(v) => set('latin', v)}\n              placeholder=\"e.g., Rudbeckia hirta\"\n            />\n            <Text \n              label=\"Image Filename\" \n              value={form.image_name ?? ''} \n              onChange={(v) => set('image_name', v)}\n              placeholder=\"e.g., rudbeckia_hirta.jpg\"\n            />\n            <Text \n              label=\"Region\" \n              value={form.region ?? ''} \n              onChange={(v) => set('region', v)}\n              placeholder=\"e.g., Coastal, Mountain, Piedmont\"\n            />\n          </div>\n        </div>\n\n        {/* Plant Characteristics */}\n        <div className=\"bg-blue-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Plant Characteristics</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <Select \n              label=\"Category\" \n              value={form.cat_code} \n              onChange={(v) => set('cat_code', v)}\n              options={lookupData.categories}\n              placeholder=\"Select plant type\"\n            />\n            <Select \n              label=\"Height\" \n              value={form.height_code} \n              onChange={(v) => set('height_code', v)}\n              options={lookupData.height}\n              placeholder=\"Select height range\"\n            />\n            <Select \n              label=\"Bloom Time\" \n              value={form.bloom_code} \n              onChange={(v) => set('bloom_code', v)}\n              options={lookupData.bloom}\n              placeholder=\"Select bloom season\"\n            />\n          </div>\n        </div>\n\n        {/* Growing Conditions */}\n        <div className=\"bg-green-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Growing Conditions</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <Select \n              label=\"Sun Requirements\" \n              value={form.sun_code} \n              onChange={(v) => set('sun_code', v)}\n              options={lookupData.sun}\n              placeholder=\"Select sun needs\"\n            />\n            <Select \n              label=\"Moisture Needs\" \n              value={form.moist_code} \n              onChange={(v) => set('moist_code', v)}\n              options={lookupData.moisture}\n              placeholder=\"Select moisture needs\"\n            />\n            <Select \n              label=\"Soil Type\" \n              value={form.soil_code} \n              onChange={(v) => set('soil_code', v)}\n              options={lookupData.soil}\n              placeholder=\"Select soil preference\"\n            />\n            <Text \n              label=\"pH Range\" \n              value={form.ph ?? ''} \n              onChange={(v) => set('ph', v)}\n              placeholder=\"e.g., 6.0-7.5\"\n            />\n          </div>\n        </div>\n\n        {/* Wildlife & Garden Use */}\n        <div className=\"bg-yellow-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Wildlife & Garden Use</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Select \n              label=\"Wildlife Value\" \n              value={form.wild_code} \n              onChange={(v) => set('wild_code', v)}\n              options={lookupData.wildlife}\n              placeholder=\"Select wildlife benefits\"\n            />\n            <Select \n              label=\"Deer Resistance\" \n              value={form.deer_code} \n              onChange={(v) => set('deer_code', v)}\n              options={lookupData.deer}\n              placeholder=\"Select deer resistance\"\n            />\n          </div>\n        </div>\n\n        {/* Detailed Information */}\n        <div className=\"bg-purple-50 rounded-lg p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Detailed Information</h3>\n          <div className=\"space-y-4\">\n            <TextArea \n              label=\"Design Function\" \n              value={form.design_function ?? ''} \n              onChange={(v) => set('design_function', v)}\n              placeholder=\"How this plant is used in landscape design...\"\n            />\n            <TextArea \n              label=\"Gardening Tips\" \n              value={form.gardening_tips ?? ''} \n              onChange={(v) => set('gardening_tips', v)}\n              placeholder=\"Growing tips, care instructions, special notes...\"\n            />\n            <TextArea \n              label=\"Wildlife Comments\" \n              value={form.wildlife_comments ?? ''} \n              onChange={(v) => set('wildlife_comments', v)}\n              placeholder=\"Specific wildlife benefits, host plant information...\"\n            />\n            <NumericInput \n              label=\"Credit Code\" \n              value={form.credit_code} \n              onChange={(v) => set('credit_code', v)}\n              placeholder=\"Photo/info source reference\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"mt-6 flex items-center gap-3 p-4 bg-gray-50 rounded-lg\">\n        <button\n          type=\"button\"\n          className=\"px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          onClick={onSave}\n          disabled={busy}\n        >\n          {busy ? '⏳ Saving...' : '💾 Save Flower'}\n        </button>\n\n        {initial?.id && initial.id !== 0 && (\n          <button\n            type=\"button\"\n            className=\"px-6 py-2 bg-red-600 text-white font-semibold rounded-lg hover:bg-red-700 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            onClick={onDelete}\n            disabled={busy}\n          >\n            {busy ? '⏳ Deleting...' : '🗑️ Delete'}\n          </button>\n        )}\n\n        {msg && (\n          <div className={`px-3 py-2 rounded-lg text-sm font-medium ${\n            msg.includes('✅') ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n          }`}>\n            {msg}\n          </div>\n        )}\n      </div>\n\n      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n        <p className=\"text-sm text-blue-700\">\n          <strong>Note:</strong> Fields marked with * are required. All dropdown options are loaded from your database lookup tables.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/upload.ts"],"sourcesContent":["// app/actions/upload.ts\n'use server';\n\nimport { createClient } from '@supabase/supabase-js';\n\nexport async function uploadFile(formData: FormData) {\n  try {\n    const file = formData.get('file') as File;\n    const bucket = formData.get('bucket') as string;\n    const filename = formData.get('filename') as string;\n    \n    if (!file || !bucket || !filename) {\n      return { error: 'Missing required fields: file, bucket, or filename' };\n    }\n\n    // Use service role key for admin uploads to bypass RLS, fallback to anon\n    const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n    const supabaseKey = serviceRoleKey || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n    \n    console.log('Upload using:', serviceRoleKey ? 'service role' : 'anon key');\n    \n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL!,\n      supabaseKey,\n      {\n        auth: {\n          autoRefreshToken: false,\n          persistSession: false\n        }\n      }\n    );\n\n    // Convert file to bytes for upload\n    const bytes = await file.arrayBuffer();\n    const buffer = new Uint8Array(bytes);\n\n    // Upload to Supabase storage using service role (bypasses RLS)\n    const { data, error } = await supabase.storage\n      .from(bucket)\n      .upload(filename, buffer, {\n        upsert: true,\n        cacheControl: '3600',\n        contentType: file.type,\n      });\n\n    if (error) {\n      console.error('Supabase upload error:', error);\n      return { error: error.message };\n    }\n\n    console.log('Successfully uploaded file:', { bucket, filename, path: data.path });\n    return { success: true, path: data.path };\n  } catch (error) {\n    console.error('Upload action error:', error);\n    return { \n      error: error instanceof Error ? error.message : 'Upload failed' \n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAKsB,aAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/admin/enhanced-image-uploader.tsx"],"sourcesContent":["// components/admin/enhanced-image-uploader.tsx\n'use client';\n\nimport { useRef, useState } from 'react';\nimport { uploadFile } from '@/app/actions/upload';\n\ninterface Props {\n  bucket: string;\n  currentName: string | null;\n  onUploaded: (fileName: string) => void;\n  type: 'photo' | 'icon';\n  title: string;\n}\n\nconst MAX_BYTES = 2_000_000; // ~2MB\nconst ALLOWED = ['image/jpeg', 'image/png', 'image/webp'];\n\nfunction slugify(x: string): string {\n  return x.toLowerCase().replace(/[^a-z0-9]+/g, '_').replace(/^_+|_+$/g, '');\n}\n\n// Resize image to specified dimensions\nfunction resizeImage(file: File, maxWidth: number, maxHeight: number): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n\n    img.onload = () => {\n      // Calculate new dimensions maintaining aspect ratio\n      let { width, height } = img;\n      \n      if (width > height) {\n        if (width > maxWidth) {\n          height = (height * maxWidth) / width;\n          width = maxWidth;\n        }\n      } else {\n        if (height > maxHeight) {\n          width = (width * maxHeight) / height;\n          height = maxHeight;\n        }\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n\n      if (!ctx) {\n        reject(new Error('Could not get canvas context'));\n        return;\n      }\n\n      // Draw and resize\n      ctx.drawImage(img, 0, 0, width, height);\n\n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Canvas to blob conversion failed'));\n          }\n        },\n        file.type,\n        0.85 // Quality for JPEG\n      );\n    };\n\n    img.onerror = () => reject(new Error('Failed to load image'));\n    img.src = URL.createObjectURL(file);\n  });\n}\n\nexport default function EnhancedImageUploader({ bucket, currentName, onUploaded, type, title }: Props) {\n  const [busy, setBusy] = useState(false);\n  const [msg, setMsg] = useState<string | null>(null);\n  const [preview, setPreview] = useState<string | null>(null);\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  const handlePick = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const f = e.target.files?.[0];\n    if (!f) return;\n\n    if (!ALLOWED.includes(f.type)) {\n      setMsg('Only JPG, PNG, or WebP allowed.');\n      return;\n    }\n    if (f.size > MAX_BYTES) {\n      setMsg('Please keep images under 2 MB.');\n      return;\n    }\n\n    setBusy(true);\n    setMsg(null);\n\n    try {\n      // Show preview\n      const previewUrl = URL.createObjectURL(f);\n      setPreview(previewUrl);\n\n      const ext = f.name.split('.').pop() ?? 'jpg';\n      const base = slugify(f.name.replace(/\\.[^.]+$/, ''));\n      const name = `${base}.${ext}`;\n\n      let fileToUpload: File | Blob = f;\n\n      // Resize photos but not icons\n      if (type === 'photo') {\n        setMsg('Resizing image...');\n        fileToUpload = await resizeImage(f, 600, 600);\n      }\n\n      setMsg('Uploading...');\n\n      // Create FormData for server action\n      const formData = new FormData();\n      formData.append('file', fileToUpload);\n      formData.append('bucket', bucket);\n      formData.append('filename', name);\n\n      const result = await uploadFile(formData);\n\n      if (result.error) {\n        throw new Error(result.error);\n      }\n\n      onUploaded(name);\n      setMsg('✅ Uploaded successfully!');\n      \n      // Clear file input\n      if (fileRef.current) fileRef.current.value = '';\n      \n      // Clear preview after a delay\n      setTimeout(() => {\n        setPreview(null);\n      }, 3000);\n\n    } catch (err: unknown) {\n      setMsg(`❌ ${err instanceof Error ? err.message : 'Upload failed'}`);\n      setPreview(null);\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  const clearPreview = () => {\n    if (preview) {\n      URL.revokeObjectURL(preview);\n      setPreview(null);\n    }\n    if (fileRef.current) fileRef.current.value = '';\n    setMsg(null);\n  };\n\n  return (\n    <div className=\"p-4 border border-gray-200 rounded-lg bg-gray-50\">\n      <h3 className=\"font-semibold text-gray-800 mb-3\">{title}</h3>\n      \n      {/* Current file info */}\n      <div className=\"mb-3 text-sm\">\n        <span className=\"text-gray-600\">Current file: </span>\n        <span className=\"font-mono text-gray-800\">\n          {currentName || 'None'}\n        </span>\n      </div>\n\n      {/* File input */}\n      <div className=\"mb-3\">\n        <input\n          ref={fileRef}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handlePick}\n          disabled={busy}\n          className=\"block w-full text-sm text-gray-600 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 disabled:opacity-50\"\n        />\n      </div>\n\n      {/* Size info */}\n      <div className=\"mb-3 text-xs text-gray-500\">\n        {type === 'photo' \n          ? '📐 Photos will be resized to 600×600px max' \n          : '🎯 Icons uploaded at original size'\n        }\n      </div>\n\n      {/* Preview */}\n      {preview && (\n        <div className=\"mb-3\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Preview:</span>\n            <button\n              onClick={clearPreview}\n              className=\"text-xs text-gray-500 hover:text-gray-700\"\n              disabled={busy}\n            >\n              Clear\n            </button>\n          </div>\n          <div className=\"relative\">\n            <img\n              src={preview}\n              alt=\"Preview\"\n              className={`border border-gray-300 rounded ${\n                type === 'photo' ? 'max-w-[300px] max-h-[300px]' : 'max-w-[100px] max-h-[100px]'\n              } object-contain`}\n            />\n            {type === 'photo' && (\n              <div className=\"absolute -bottom-6 left-0 text-xs text-gray-500\">\n                Will be resized to fit 600×600px\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Status message */}\n      {msg && (\n        <div className={`text-sm p-2 rounded ${\n          msg.includes('✅') ? 'bg-green-100 text-green-800' : \n          msg.includes('❌') ? 'bg-red-100 text-red-800' : \n          'bg-blue-100 text-blue-800'\n        }`}>\n          {msg}\n        </div>\n      )}\n\n      {/* Loading indicator */}\n      {busy && (\n        <div className=\"flex items-center gap-2 text-sm text-gray-600 mt-2\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n          <span>Processing...</span>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/admin/uploads-panel.tsx"],"sourcesContent":["// components/admin/uploads-panel.tsx\n'use client';\n\nimport { useState } from 'react';\nimport EnhancedImageUploader from './enhanced-image-uploader';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function UploadsPanel({ isOpen, onClose }: Props) {\n  const [photoFileName, setPhotoFileName] = useState<string>('');\n  const [iconFileName, setIconFileName] = useState<string>('');\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\n        onClick={onClose}\n      />\n      \n      {/* Panel */}\n      <div className=\"fixed right-0 top-0 h-full w-full max-w-2xl bg-white z-50 shadow-2xl overflow-y-auto\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-800\">Upload Images & Icons</h2>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n              aria-label=\"Close uploads panel\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Instructions */}\n          <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800 mb-2\">📸 Upload Guidelines</h3>\n            <ul className=\"text-sm text-blue-700 space-y-1\">\n              <li>• <strong>Flower Photos:</strong> Will be automatically resized to 600×600px</li>\n              <li>• <strong>Icons:</strong> Uploaded at original size (keep small ~50px)</li>\n              <li>• <strong>Formats:</strong> JPG, PNG, or WebP only</li>\n              <li>• <strong>Size Limit:</strong> 2MB maximum per file</li>\n              <li>• <strong>Naming:</strong> Files will be renamed automatically</li>\n            </ul>\n          </div>\n\n          {/* Upload sections */}\n          <div className=\"space-y-6\">\n            {/* Photos uploader */}\n            <EnhancedImageUploader\n              bucket=\"flowers\"\n              currentName={photoFileName || null}\n              onUploaded={(fileName) => {\n                setPhotoFileName(fileName);\n                console.log('Photo uploaded:', fileName);\n              }}\n              type=\"photo\"\n              title=\"🌸 Flower Photos\"\n            />\n\n            {/* Icons uploader */}\n            <EnhancedImageUploader\n              bucket=\"icons\"\n              currentName={iconFileName || null}\n              onUploaded={(fileName) => {\n                setIconFileName(fileName);\n                console.log('Icon uploaded:', fileName);\n              }}\n              type=\"icon\"\n              title=\"🔲 Icons & Symbols\"\n            />\n          </div>\n\n          {/* Recent uploads info */}\n          {(photoFileName || iconFileName) && (\n            <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n              <h3 className=\"font-semibold text-green-800 mb-2\">✅ Recent Uploads</h3>\n              <div className=\"text-sm text-green-700 space-y-1\">\n                {photoFileName && (\n                  <div>\n                    <strong>Photo:</strong> <code className=\"bg-green-100 px-1 rounded\">{photoFileName}</code>\n                  </div>\n                )}\n                {iconFileName && (\n                  <div>\n                    <strong>Icon:</strong> <code className=\"bg-green-100 px-1 rounded\">{iconFileName}</code>\n                  </div>\n                )}\n              </div>\n              <p className=\"text-xs text-green-600 mt-2\">\n                💡 Copy these filenames to use in the flower editor!\n              </p>\n            </div>\n          )}\n\n          {/* Storage info */}\n          <div className=\"mt-6 p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-700 mb-2\">📁 Storage Information</h3>\n            <div className=\"text-sm text-gray-600 space-y-1\">\n              <p>• Photos are stored in the <code className=\"bg-gray-200 px-1 rounded\">flowers</code> bucket</p>\n              <p>• Icons are stored in the <code className=\"bg-gray-200 px-1 rounded\">icons</code> bucket</p>\n              <p>• Files can be overwritten by uploading with the same name</p>\n              <p>• Use the filename in the flower editor&apos;s &quot;Image filename&quot; field</p>\n            </div>\n          </div>\n\n          {/* Close button */}\n          <div className=\"mt-8 flex justify-end\">\n            <button\n              onClick={onClose}\n              className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n            >\n              Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1532, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/user-management.ts"],"sourcesContent":["// app/actions/user-management.ts\n'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { isSuperUser, addAdminUser } from '@/lib/admin-users';\n\n// Use service role key for admin operations\nconst supabaseAdmin = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nexport async function inviteUser(email: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user (dynamic check)\n    const isCurrentUserSuper = await isSuperUser(currentUserEmail);\n    if (!isCurrentUserSuper) {\n      return { error: 'Only super users can invite new users' };\n    }\n\n    // Validate email\n    if (!email || !email.includes('@')) {\n      return { error: 'Please enter a valid email address' };\n    }\n\n    // Send invitation\n    const { data, error } = await supabaseAdmin.auth.admin.inviteUserByEmail(email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'}/auth/callback`,\n    });\n\n    if (error) {\n      console.error('Invitation error:', error);\n      return { error: error.message };\n    }\n\n    // Add user to admin_users table\n    const addResult = await addAdminUser(email, currentUserEmail, false);\n    if (!addResult.success && !addResult.error?.includes('already an admin')) {\n      console.warn('Failed to add user to admin_users table:', addResult.error);\n      // Don't fail the invitation for this, but log it\n    }\n\n    return { \n      success: true, \n      message: `Invitation sent to ${email}. They will receive an email to set up their account.`,\n      user: data.user \n    };\n  } catch (error: unknown) {\n    console.error('Server error inviting user:', error);\n    return { error: 'Failed to send invitation. Please try again.' };\n  }\n}\n\nexport async function listUsers(currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can view user list' };\n    }\n\n    const { data, error } = await supabaseAdmin.auth.admin.listUsers();\n    \n    if (error) {\n      console.error('List users error:', error);\n      return { error: error.message };\n    }\n\n    // Filter to relevant users only\n    const filteredUsers = data.users.filter(user => \n      user.email && (\n        user.email.includes('gmail.com') || \n        user.email.includes('fisher') ||\n        SUPER_USERS.includes(user.email.toLowerCase())\n      )\n    );\n\n    return { success: true, users: filteredUsers };\n  } catch (error: unknown) {\n    console.error('Server error listing users:', error);\n    return { error: 'Failed to load users. Please try again.' };\n  }\n}\n\nexport async function removeUser(userId: string, userEmail: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can remove users' };\n    }\n\n    // Don't allow removing super users\n    if (SUPER_USERS.includes(userEmail.toLowerCase())) {\n      return { error: 'Cannot remove super users' };\n    }\n\n    const { error } = await supabaseAdmin.auth.admin.deleteUser(userId);\n    \n    if (error) {\n      console.error('Remove user error:', error);\n      return { error: error.message };\n    }\n\n    return { \n      success: true, \n      message: `Removed access for ${userEmail}` \n    };\n  } catch (error: unknown) {\n    console.error('Server error removing user:', error);\n    return { error: 'Failed to remove user. Please try again.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAkBsB,aAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/user-management.ts"],"sourcesContent":["// app/actions/user-management.ts\n'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { isSuperUser, addAdminUser } from '@/lib/admin-users';\n\n// Use service role key for admin operations\nconst supabaseAdmin = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nexport async function inviteUser(email: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user (dynamic check)\n    const isCurrentUserSuper = await isSuperUser(currentUserEmail);\n    if (!isCurrentUserSuper) {\n      return { error: 'Only super users can invite new users' };\n    }\n\n    // Validate email\n    if (!email || !email.includes('@')) {\n      return { error: 'Please enter a valid email address' };\n    }\n\n    // Send invitation\n    const { data, error } = await supabaseAdmin.auth.admin.inviteUserByEmail(email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'}/auth/callback`,\n    });\n\n    if (error) {\n      console.error('Invitation error:', error);\n      return { error: error.message };\n    }\n\n    // Add user to admin_users table\n    const addResult = await addAdminUser(email, currentUserEmail, false);\n    if (!addResult.success && !addResult.error?.includes('already an admin')) {\n      console.warn('Failed to add user to admin_users table:', addResult.error);\n      // Don't fail the invitation for this, but log it\n    }\n\n    return { \n      success: true, \n      message: `Invitation sent to ${email}. They will receive an email to set up their account.`,\n      user: data.user \n    };\n  } catch (error: unknown) {\n    console.error('Server error inviting user:', error);\n    return { error: 'Failed to send invitation. Please try again.' };\n  }\n}\n\nexport async function listUsers(currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can view user list' };\n    }\n\n    const { data, error } = await supabaseAdmin.auth.admin.listUsers();\n    \n    if (error) {\n      console.error('List users error:', error);\n      return { error: error.message };\n    }\n\n    // Filter to relevant users only\n    const filteredUsers = data.users.filter(user => \n      user.email && (\n        user.email.includes('gmail.com') || \n        user.email.includes('fisher') ||\n        SUPER_USERS.includes(user.email.toLowerCase())\n      )\n    );\n\n    return { success: true, users: filteredUsers };\n  } catch (error: unknown) {\n    console.error('Server error listing users:', error);\n    return { error: 'Failed to load users. Please try again.' };\n  }\n}\n\nexport async function removeUser(userId: string, userEmail: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can remove users' };\n    }\n\n    // Don't allow removing super users\n    if (SUPER_USERS.includes(userEmail.toLowerCase())) {\n      return { error: 'Cannot remove super users' };\n    }\n\n    const { error } = await supabaseAdmin.auth.admin.deleteUser(userId);\n    \n    if (error) {\n      console.error('Remove user error:', error);\n      return { error: error.message };\n    }\n\n    return { \n      success: true, \n      message: `Removed access for ${userEmail}` \n    };\n  } catch (error: unknown) {\n    console.error('Server error removing user:', error);\n    return { error: 'Failed to remove user. Please try again.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA2DsB,YAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1554, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/app/actions/user-management.ts"],"sourcesContent":["// app/actions/user-management.ts\n'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { isSuperUser, addAdminUser } from '@/lib/admin-users';\n\n// Use service role key for admin operations\nconst supabaseAdmin = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nexport async function inviteUser(email: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user (dynamic check)\n    const isCurrentUserSuper = await isSuperUser(currentUserEmail);\n    if (!isCurrentUserSuper) {\n      return { error: 'Only super users can invite new users' };\n    }\n\n    // Validate email\n    if (!email || !email.includes('@')) {\n      return { error: 'Please enter a valid email address' };\n    }\n\n    // Send invitation\n    const { data, error } = await supabaseAdmin.auth.admin.inviteUserByEmail(email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'}/auth/callback`,\n    });\n\n    if (error) {\n      console.error('Invitation error:', error);\n      return { error: error.message };\n    }\n\n    // Add user to admin_users table\n    const addResult = await addAdminUser(email, currentUserEmail, false);\n    if (!addResult.success && !addResult.error?.includes('already an admin')) {\n      console.warn('Failed to add user to admin_users table:', addResult.error);\n      // Don't fail the invitation for this, but log it\n    }\n\n    return { \n      success: true, \n      message: `Invitation sent to ${email}. They will receive an email to set up their account.`,\n      user: data.user \n    };\n  } catch (error: unknown) {\n    console.error('Server error inviting user:', error);\n    return { error: 'Failed to send invitation. Please try again.' };\n  }\n}\n\nexport async function listUsers(currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can view user list' };\n    }\n\n    const { data, error } = await supabaseAdmin.auth.admin.listUsers();\n    \n    if (error) {\n      console.error('List users error:', error);\n      return { error: error.message };\n    }\n\n    // Filter to relevant users only\n    const filteredUsers = data.users.filter(user => \n      user.email && (\n        user.email.includes('gmail.com') || \n        user.email.includes('fisher') ||\n        SUPER_USERS.includes(user.email.toLowerCase())\n      )\n    );\n\n    return { success: true, users: filteredUsers };\n  } catch (error: unknown) {\n    console.error('Server error listing users:', error);\n    return { error: 'Failed to load users. Please try again.' };\n  }\n}\n\nexport async function removeUser(userId: string, userEmail: string, currentUserEmail: string) {\n  try {\n    // Check if current user is a super user\n    const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n    if (!SUPER_USERS.includes(currentUserEmail.toLowerCase())) {\n      return { error: 'Only super users can remove users' };\n    }\n\n    // Don't allow removing super users\n    if (SUPER_USERS.includes(userEmail.toLowerCase())) {\n      return { error: 'Cannot remove super users' };\n    }\n\n    const { error } = await supabaseAdmin.auth.admin.deleteUser(userId);\n    \n    if (error) {\n      console.error('Remove user error:', error);\n      return { error: error.message };\n    }\n\n    return { \n      success: true, \n      message: `Removed access for ${userEmail}` \n    };\n  } catch (error: unknown) {\n    console.error('Server error removing user:', error);\n    return { error: 'Failed to remove user. Please try again.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA0FsB,aAAA,WAAA,GAAA,CAAA,GAAA,qVAAA,CAAA,wBAAA,EAAA,8CAAA,qVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1565, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/admin/user-management.tsx"],"sourcesContent":["// components/admin/user-management.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { inviteUser, listUsers, removeUser } from '@/app/actions/user-management';\n\ninterface User {\n  id: string;\n  email: string;\n  created_at: string;\n  email_confirmed_at?: string;\n}\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  currentUserEmail: string;\n}\n\nexport default function UserManagement({ isOpen, onClose, currentUserEmail }: Props) {\n  const [users, setUsers] = useState<User[]>([]);\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [loadingUsers, setLoadingUsers] = useState(false);\n\n  // Super users who can manage other users (keep for now, will be dynamic in future)\n  const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n  const isSuperUser = SUPER_USERS.includes(currentUserEmail.toLowerCase());\n\n  // Load existing users\n  const loadUsers = async () => {\n    if (!isSuperUser) return;\n    \n    setLoadingUsers(true);\n    try {\n      const result = await listUsers(currentUserEmail);\n      \n      if (result.error) {\n        setMessage({ type: 'error', text: result.error });\n      } else if (result.success && result.users) {\n        setUsers(result.users as User[]);\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Failed to load users. Please try again.' });\n    } finally {\n      setLoadingUsers(false);\n    }\n  };\n\n  // Add new user (invite them to create account)\n  const addUser = async () => {\n    if (!newUserEmail.trim() || !isSuperUser) return;\n    \n    setLoading(true);\n    setMessage(null);\n    \n    try {\n      const result = await inviteUser(newUserEmail.trim(), currentUserEmail);\n      \n      if (result.error) {\n        setMessage({ type: 'error', text: result.error });\n      } else if (result.success) {\n        setMessage({ type: 'success', text: result.message || 'Invitation sent successfully!' });\n        setNewUserEmail('');\n        // Reload users list\n        await loadUsers();\n      }\n    } catch {\n      setMessage({ \n        type: 'error', \n        text: 'Failed to send invitation. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Remove user access (this doesn't delete the user, just removes them from allowed list)\n  const handleRemoveUser = async (userId: string, email: string) => {\n    if (!isSuperUser || SUPER_USERS.includes(email.toLowerCase())) {\n      setMessage({ type: 'error', text: 'Cannot remove super users or insufficient permissions.' });\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const result = await removeUser(userId, email, currentUserEmail);\n      \n      if (result.error) {\n        setMessage({ type: 'error', text: result.error });\n      } else if (result.success) {\n        setMessage({ type: 'success', text: result.message || 'User removed successfully' });\n        await loadUsers();\n      }\n    } catch {\n      setMessage({ type: 'error', text: 'Failed to remove user. Please try again.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load users when panel opens\n  if (isOpen && users.length === 0 && !loadingUsers) {\n    loadUsers();\n  }\n\n  if (!isOpen) return null;\n\n  if (!isSuperUser) {\n    return (\n      <>\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" onClick={onClose} />\n        <div className=\"fixed right-0 top-0 h-full w-full max-w-2xl bg-white z-50 shadow-2xl overflow-y-auto\">\n          <div className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold text-gray-800\">User Management</h2>\n              <button onClick={onClose} className=\"p-2 text-gray-400 hover:text-gray-600\">\n                <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <div className=\"text-center py-12\">\n              <div className=\"mx-auto h-16 w-16 rounded-full bg-red-100 flex items-center justify-center mb-4\">\n                <svg className=\"h-8 w-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.924-.833-2.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Access Denied</h3>\n              <p className=\"text-gray-600\">\n                Only super users can manage other users. Contact Margaret Fisher or George Fisher for user management.\n              </p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" onClick={onClose} />\n      <div className=\"fixed right-0 top-0 h-full w-full max-w-2xl bg-white z-50 shadow-2xl overflow-y-auto\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-800\">User Management</h2>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Add New User */}\n          <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-800 mb-3\">👥 Invite New Admin User</h3>\n            <div className=\"flex gap-3\">\n              <input\n                type=\"email\"\n                value={newUserEmail}\n                onChange={(e) => setNewUserEmail(e.target.value)}\n                placeholder=\"Enter email address...\"\n                className=\"flex-1 rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                disabled={loading}\n              />\n              <button\n                onClick={addUser}\n                disabled={loading || !newUserEmail.trim()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Inviting...' : 'Send Invite'}\n              </button>\n            </div>\n            <div className=\"text-xs text-blue-600 mt-2 space-y-1\">\n              <p>💡 The user will receive an email invitation to set up their account and password.</p>\n              <p>⚠️ If the invitation link doesn&apos;t work, tell them to use &quot;Set Password&quot; on the login page instead.</p>\n            </div>\n          </div>\n\n          {/* Message Display */}\n          {message && (\n            <div className={`mb-4 p-3 rounded-md ${\n              message.type === 'success' \n                ? 'bg-green-50 border border-green-200 text-green-800' \n                : 'bg-red-50 border border-red-200 text-red-800'\n            }`}>\n              {message.text}\n            </div>\n          )}\n\n          {/* Users List */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-semibold text-gray-800\">Current Admin Users</h3>\n            \n            {loadingUsers ? (\n              <div className=\"text-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"text-gray-600 mt-2\">Loading users...</p>\n              </div>\n            ) : users.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>No users found or unable to load users.</p>\n                <p className=\"text-xs mt-1\">This feature requires special admin privileges.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {users.map((user) => (\n                  <div key={user.id} className=\"p-4 border border-gray-200 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"font-medium text-gray-900\">{user.email}</span>\n                          {SUPER_USERS.includes(user.email?.toLowerCase() || '') && (\n                            <span className=\"px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full\">\n                              Super User\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"text-sm text-gray-600 mt-1\">\n                          <span>Created: {new Date(user.created_at).toLocaleDateString()}</span>\n                          {user.email_confirmed_at && (\n                            <span className=\"ml-3 text-green-600\">✅ Email Verified</span>\n                          )}\n                        </div>\n                      </div>\n                      \n                      {!SUPER_USERS.includes(user.email?.toLowerCase() || '') && (\n                        <button\n                          onClick={() => handleRemoveUser(user.id, user.email || '')}\n                          disabled={loading}\n                          className=\"px-3 py-1 text-sm text-red-600 hover:text-red-800 hover:bg-red-50 rounded border border-red-200 disabled:opacity-50\"\n                        >\n                          Remove Access\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Info Section */}\n          <div className=\"mt-6 p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-700 mb-2\">ℹ️ User Management Info</h3>\n            <ul className=\"text-sm text-gray-600 space-y-1\">\n              <li>• <strong>Super Users</strong> can invite and manage other admin users</li>\n              <li>• <strong>Invited users</strong> receive an email to set up their account</li>\n              <li>• <strong>Super Users</strong> cannot be removed by other users</li>\n              <li>• <strong>Admin access</strong> is required to manage plant database</li>\n            </ul>\n          </div>\n\n          {/* Close Button */}\n          <div className=\"mt-8 flex justify-end\">\n            <button\n              onClick={onClose}\n              className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n            >\n              Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":["file:///Users/george/Dropbox/machine_learning/margaret-flower-app-main/components/admin/admin-dashboard.tsx"],"sourcesContent":["// components/admin/admin-dashboard.tsx\n'use client';\n\nimport Link from 'next/link';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport type { Flower } from '@/lib/types';\nimport { Modal } from '@/components/ui/modal';\nimport EnhancedEditor from './enhanced-editor';\nimport UploadsPanel from './uploads-panel';\nimport UserManagement from './user-management';\nimport { useState, Suspense } from 'react';\n\ntype Props = {\n  flowers: Flower[];\n  selected: Flower | null;\n  searchParams?: { [key: string]: string | string[] | undefined };\n  currentUserEmail?: string;\n};\n\nexport default function AdminDashboard({ flowers, selected, searchParams, currentUserEmail }: Props) {\n  const router = useRouter();\n  const sp = useSearchParams();\n  const q = (sp.get('q') ?? '').trim();\n  const debug = sp.get('debug'); // Preserve debug parameter\n  const auth = sp.get('auth'); // Preserve auth parameter\n  const [isUploadsPanelOpen, setIsUploadsPanelOpen] = useState(false);\n  const [isUserManagementOpen, setIsUserManagementOpen] = useState(false);\n  \n  // Check if current user is a super user\n  const SUPER_USERS = ['1margaret.e.fisher@gmail.com', 'georgerfisher@gmail.com'];\n  const isSuperUser = currentUserEmail && SUPER_USERS.includes(currentUserEmail.toLowerCase());\n\n  // close modal = drop ?id= from URL (keep q, debug, and auth)\n  const closeModal = () => {\n    const params = new URLSearchParams(sp.toString());\n    params.delete('id');\n    router.replace(`/admin${params.toString() ? `?${params.toString()}` : ''}`);\n    router.refresh();\n  };\n\n  return (\n    <>\n      {/* Action buttons */}\n      <div className=\"mb-6 flex items-center gap-3\">\n                       <Link\n                 href={{ pathname: '/admin', query: { id: 0, ...(q ? { q } : {}), ...(debug ? { debug } : {}), ...(auth ? { auth } : {}) } }}\n                 scroll={false}\n          className=\"inline-flex items-center gap-2 rounded-lg bg-green-600 px-4 py-2 text-white font-semibold hover:bg-green-700 focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors\"\n        >\n          <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n          </svg>\n          Add New Flower\n        </Link>\n        \n                       <button\n                 onClick={() => setIsUploadsPanelOpen(true)}\n                 className=\"inline-flex items-center gap-2 rounded-lg bg-purple-600 px-4 py-2 text-white font-semibold hover:bg-purple-700 focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\"\n               >\n                 <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                   <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                 </svg>\n                 Upload Images\n               </button>\n               \n               {isSuperUser && (\n                 <button\n                   onClick={() => setIsUserManagementOpen(true)}\n                   className=\"inline-flex items-center gap-2 rounded-lg bg-orange-600 px-4 py-2 text-white font-semibold hover:bg-orange-700 focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 transition-colors\"\n                 >\n                   <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                   </svg>\n                   Manage Users\n                 </button>\n               )}\n      </div>\n\n      {/* grid: whole card is a link so clicking name opens modal */}\n      <ul className=\"grid grid-cols-1 gap-2 sm:grid-cols-2 md:grid-cols-3\">\n        {flowers.map((f) => (\n          <li key={f.id}>\n            <Link\n              href={{ pathname: '/admin', query: { id: f.id, ...(q ? { q } : {}), ...(debug ? { debug } : {}), ...(auth ? { auth } : {}) } }}\n              scroll={false}\n              className=\"block rounded border px-3 py-2 hover:bg-gray-50\"\n            >\n              <div className=\"font-medium\">{f.common}</div>\n              <div className=\"text-xs italic text-gray-600\">{f.latin}</div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      {/* popup editor (opens whenever selected is present) */}\n      <Modal\n        open={Boolean(selected)}\n        onClose={closeModal}\n        title={selected?.id ? `Edit: ${selected.common}` : 'New Flower'}\n        maxWidth=\"max-w-6xl\"\n      >\n        {selected && (\n          <EnhancedEditor\n            initial={selected}\n            onSaved={closeModal}\n            onDeleted={closeModal}\n          />\n        )}\n      </Modal>\n\n      {/* Uploads panel */}\n      <Suspense fallback={null}>\n        <UploadsPanel\n          isOpen={isUploadsPanelOpen}\n          onClose={() => setIsUploadsPanelOpen(false)}\n        />\n      </Suspense>\n      \n      {/* User Management Panel */}\n      <UserManagement \n        isOpen={isUserManagementOpen} \n        onClose={() => setIsUserManagementOpen(false)}\n        currentUserEmail={currentUserEmail || ''}\n      />\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}